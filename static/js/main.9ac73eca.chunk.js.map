{"version":3,"sources":["components/SideBar/SideBar.js","ListsContext.tsx","components/MenuOfList/MenuOfList.js","components/TodoList/HeaderList/HeaderList.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/TodoItems/TodoItems.js","components/TodoList/TodoList.tsx","pages/TodosPage.tsx","pages/WetherPage.tsx","components/App.tsx","serviceWorker.js","index.js","components/TodoList/TodoItem/styles.module.scss","components/TodoList/styles.module.scss"],"names":["useStyles","makeStyles","list","width","fullList","menuButton","margin","SideBar","classes","React","useState","open","setOpen","toggleDrawer","event","type","key","prevOpen","IconButton","className","color","aria-label","onClick","edge","SwipeableDrawer","anchor","role","onKeyDown","Divider","List","ListItem","button","ListItemIcon","to","initialTodos","id","Date","now","title","todos","text","completed","ListsContext","createContext","theme","menu","zIndex","MenuOfList","deleteList","renameList","idList","anchorRef","useRef","handleToggleMenu","ref","Popper","anchorEl","current","placement","transition","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","onClose","autoFocusItem","MenuItem","Header","styled","div","HeaderList","saveTitleList","titleOfList","setTitle","titleInput","createRef","trim","length","Typography","variant","component","gutterBottom","TextField","style","marginBottom","label","inputRef","size","e","value","preventDefault","liStyle","display","justifyContent","alignItems","TodoItem","item","CheckButton","Consumer","context","completeItem","ListGroupItem","as","styles","disabled","deleteItem","TodoItems","ListItems","map","ListGroup","TodoList","lists","updateListsState","taskInput","Card","card","CardContent","filteredLists","filter","newTitle","renamedLists","Form","onSubmit","newItem","updatedLists","concat","addItem","FormGroup","controlId","InputGroup","RootRef","rootRef","FormControl","placeholder","Append","Button","Title","h1","TodosPage","setTodos","newTodos","useEffect","initialItems","JSON","parse","localStorage","getItem","stringify","setItem","deleteTodo","idTodo","filteredTodos","todo","completedTodo","completedTodos","textAlign","newList","prev","Provider","WetherPage","Wrapper","section","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9ac73eca.chunk.js","sourcesContent":["import React from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    menuButton: {\n        margin: '20px'\n    },\n});\nconst SideBar = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const toggleDrawer = event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen((prevOpen) => !prevOpen);\n    };\n    return (\n        <>\n            <IconButton className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                edge=\"start\"\n            >\n                <MenuIcon />\n            </IconButton>\n            <SwipeableDrawer\n                anchor={\"left\"}\n                open={open}\n            // onClose={toggleDrawer(anchor, false)}\n            // onOpen={toggleDrawer(anchor, true)}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={toggleDrawer}\n                    onKeyDown={toggleDrawer}\n                >\n                    {/* <List>\n                        {lists.map((list, index) => (\n                            <ListItem button key={list.id}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={list.title} onClick={list.action} />\n                            </ListItem>\n                        ))}\n                    </List> */}\n                    <Divider />\n                    <List>\n                        <ListItem button>\n                            <ListItemIcon><MailIcon /></ListItemIcon>\n                            <NavLink to=\"/\">Todo lisr</NavLink>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon><InboxIcon /></ListItemIcon>\n                            <NavLink to=\"/wether\">Wether</NavLink>\n                        </ListItem>\n                    </List>\n                    <Divider />\n                </div>\n            </SwipeableDrawer>\n        </>\n    )\n}\n\nexport default SideBar;","import React from 'react';\nimport { ITodo } from './interfaces';\n\nconst initialTodos: any = [{\n  id: Date.now(),\n  title: 'Список дел',\n  todos: [\n    {\n      id: Date.now(),\n      text: 'Купить продукты',\n      completed: false\n    }]\n}];\n\nconst ListsContext = React.createContext(initialTodos);\n\nexport default ListsContext;","import React from 'react';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    zIndex: 1,\n  },\n}));\n\nconst MenuOfList = ({ deleteList, renameList, idList }) => {\n  const classes = useStyles();\n  //NOTE: разобраться с хуком React.useRef\n  const anchorRef = React.useRef(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleToggleMenu = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <div>\n      <IconButton\n        ref={anchorRef}\n        onClick={handleToggleMenu}\n      >\n        <MoreHorizIcon />\n      </IconButton>\n      <Popper className={classes.menu} open={open} anchorEl={anchorRef.current} placement='bottom-end' transition>\n        {({ TransitionProps }) => (\n          <Grow {...TransitionProps}>\n            <Paper >\n              <ClickAwayListener onClickAway={handleToggleMenu}>\n                <MenuList onClose={handleToggleMenu} autoFocusItem={open}>\n                  <MenuItem onClick={() => { handleToggleMenu(); renameList('') }}>Rename list</MenuItem>\n                  <MenuItem onClick={() => { deleteList() }}>Delete list</MenuItem>\n                  <MenuItem onClick={handleToggleMenu}>Logout</MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  )\n}\n\nexport default MenuOfList;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport MenuOfList from '../../MenuOfList/MenuOfList';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst Header = styled.div`\n  display:flex;\n  justify-content:space-between;\n  align-items:center;\n  margin-bottom:10px;\n`;\nconst HeaderList = ({ title, deleteList, saveTitleList }) => {\n  const [titleOfList, setTitle] = React.useState(title);\n  const titleInput = React.createRef();\n\n  const renameList = (e) => {\n    setTitle(titleInput.current.value)\n    saveTitleList(titleInput.current.value)\n    e.preventDefault()\n  };\n\n  return (\n    <Header>\n      {titleOfList.trim().length !== 0 &&\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n          {titleOfList}\n        </Typography>\n      }\n      {titleOfList.trim().length === 0 &&\n        <>\n          <TextField style={{ marginBottom: '20px' }}\n            label=\"Title\"\n            inputRef={titleInput}\n            id=\"outlined-size-small\"\n            // defaultValue=\"Enter title of list\"\n            size=\"small\" />\n          <IconButton onClick={renameList}>\n            <CheckIcon />\n          </IconButton>\n        </>\n      }\n      <MenuOfList deleteList={deleteList} renameList={setTitle} />\n    </Header>\n  )\n}\n\nexport default HeaderList;","import React from \"react\";\nimport styles from './styles.module.scss';\nimport ListsContext from '../../../ListsContext';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Button from 'react-bootstrap/Button';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\nconst liStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n}\n\nconst TodoItem = ({ item }) => {\n\n  const CheckButton = () => {\n    return (\n      <ListsContext.Consumer>\n        {context => (\n          !item.completed ?\n            <RadioButtonUncheckedIcon onClick={() => context.completeItem(context.list.id, item.id)} />\n            :\n            <CheckCircleOutlineIcon style={{ color: 'green' }} onClick={() => context.completeItem(context.list.id, item.id)} />\n        )}\n      </ListsContext.Consumer>\n    )\n  }\n  return (\n    <ListGroupItem as=\"li\" style={liStyle} className={item.completed ? styles.disabled : null}>\n      <CheckButton />\n      <span className={styles.text}>{item.text}</span>\n      <ListsContext.Consumer>\n        {context => (\n          <DeleteForeverIcon onClick={() => context.deleteItem(context.list.id, item.id)} />\n        )\n        }\n      </ListsContext.Consumer>\n    </ListGroupItem>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport ListsContext from '../../../ListsContext';\nimport TodoItem from '../TodoItem/TodoItem';\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\nexport const TodoItems = () => {\n  const ListItems = () => {\n    return (\n      <ListsContext.Consumer>\n        {context => (\n          context.list.todos.map(item => {\n            return (\n              <TodoItem item={item} key={item.id} />\n            )\n          })\n        )}\n      </ListsContext.Consumer>\n    )\n  }\n  // const listItems = todoEntries.map(this.createTasks);\n  return (\n    <ListGroup as=\"ul\" className=\"todo-list\">\n      <ListItems />\n    </ListGroup>\n  );\n}","import React, { useRef } from \"react\";\nimport RootRef from '@material-ui/core/RootRef';\nimport styles from './styles.module.scss';\nimport HeaderList from './HeaderList/HeaderList'\nimport {TodoItems} from './TodoItems/TodoItems.js';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { ITodo, T } from '../../interfaces';\n\ntype TodoListProps = {\n  lists: ITodo[]\n  title: string\n  idList: string | number\n  updateListsState: (newTodos: ITodo[]) => void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ lists, title, idList, updateListsState }) => {\n  const taskInput = useRef<HTMLInputElement>(null);\n\n  const saveTitleList = (newTitle: string): void => {\n    const renamedLists = lists.map(list => {\n      return (\n        list.id === idList ? { ...list, title: newTitle } : list\n      )\n    })\n    /* Save to state */\n    updateListsState(renamedLists);\n  };\n\n  const deleteList = (): void => {\n    const filteredLists = lists.filter(list => list.id !== idList);\n    /* Save to state */\n    updateListsState(filteredLists);\n  }\n  const addItem = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    if (taskInput.current!.value !== \"\") {\n      /* Create new entry */\n      const newItem: T = {\n        id: Date.now(),\n        text: taskInput.current!.value,\n        completed: false\n      }\n      const updatedLists = lists.map(list => {\n        return (\n          list.id === idList ? { ...list, todos: list.todos.concat(newItem) } : list\n        )\n      })\n      /* Save to state */\n      updateListsState(updatedLists)\n      /* Clear input for new task*/\n      taskInput.current!.value = \"\";\n    }\n  }\n  return (\n    <Card className={styles.card}>\n      <CardContent>\n        <HeaderList title={title} deleteList={deleteList} saveTitleList={saveTitleList} />\n        {/* <Form onSubmit={addItem.bind(this, idList, taskInput)}> */}\n        <Form onSubmit={(event: any): void => addItem(event)}>\n          <FormGroup controlId=\"formAddItem\">\n            <InputGroup className=\"mb-3\">\n              <>\n                <RootRef rootRef={taskInput}>\n                  <FormControl\n                    placeholder=\"enter task\"\n                  />\n                </RootRef>\n                <InputGroup.Append>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </>\n            </InputGroup>\n          </FormGroup>\n        </Form>\n        <TodoItems />\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { ITodo } from '../interfaces';\nimport ListsContext from '../ListsContext'\nimport { TodoList } from '../components/TodoList/TodoList';\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button';\n\nconst storageKey: string = \"TODO_ITEMS\";\nconst Title = styled.h1`\n  color:#000000;\n  text-align:center;\n  width:100%;\n`;\nexport const TodosPage: React.FC = () => {\n    const [todos, setTodos] = useState<ITodo[]>([])\n\n    const updateListsState = (newTodos: ITodo[]) => {\n        setTodos(newTodos);\n    }\n    /* Save to state from lS*/\n    useEffect(() => {\n        const initialItems: ITodo[] = [{\n            id: Date.now(),\n            title: 'Список дел',\n            todos: [\n                {\n                    id: Date.now(),\n                    text: 'Купить продукты',\n                    completed: false\n                }]\n        }];\n        const lists = JSON.parse((localStorage.getItem(storageKey)) || JSON.stringify(initialItems)) as ITodo[]\n        setTodos(lists)\n    }, [])\n\n    /* Update lS */\n    useEffect(() => {\n        localStorage.setItem(storageKey, JSON.stringify(todos))\n    }, [todos])\n\n    const addList = (): void => {\n        const newList: ITodo = {\n            id: Date.now(),\n            title: '',\n            todos: []\n        }\n        setTodos(prev => prev.concat(newList))\n    }\n\n    const deleteTodo = (idList: string | number, idTodo: string | number): void => {\n        const filteredTodos = todos.map(list => {\n            return (\n                list.id === idList ?\n                    {\n                        ...list, todos: list.todos.filter(todo => todo.id !== idTodo)\n                    }\n                    : list\n            )\n        })\n        setTodos(filteredTodos)\n    }\n\n    const completedTodo = (idList: string | number, idTodo: string | number): void => {\n        const completedTodos: any = todos.map(list => {\n            return (\n                list.id === idList ? {\n                    ...list, todos: list.todos.map(todo => {\n                        return (\n                            todo.id === idTodo ?\n                                { todo, completed: !todo.completed }\n                                : todo\n                        )\n                    })\n                } : list\n            )\n        })\n        setTodos(completedTodos)\n    }\n    return (\n        <>\n            <Title>My happy todos</Title>\n            <div style={{ width: '100%', textAlign: 'center' }}>\n                <Button onClick={addList}>Add list</Button>\n            </div>\n            {(todos.length === 0) &&\n                <p className=\"center\">While there is no business</p>\n            }\n            {todos.map(list => {\n                return (\n                    <ListsContext.Provider key={list.id} value={{\n                        list: list,\n                        deleteItem: deleteTodo,\n                        completeItem: completedTodo\n                    }}>\n                        <TodoList idList={list.id} lists={todos} title={list.title} updateListsState={updateListsState} />\n                    </ListsContext.Provider>\n                )\n            })}\n        </>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  color:#000000;\n  text-align:center;\n  width:100%;\n`;\nexport const WetherPage: React.FC = () => {\n    return (\n        <Title>WetherPage</Title>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport styled from 'styled-components'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SideBar from './SideBar/SideBar';\nimport { TodosPage } from '../pages/TodosPage';\nimport { WetherPage } from '../pages/WetherPage';\n/* TODO: \n- 1. добавить сворачивание списка\n+ 2. добавить удаление списка\n+ 3. добавить переименование списка\n- 4. сделать теги\n+ 5. добавить фон\n- 6. фон из flickr или живые обои\n- 7. добавить иконку\n*/\nconst Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  flex-wrap:wrap;\n`;\n\nexport const App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <SideBar />\n        <Wrapper>\n          <Switch>\n            <Route component={TodosPage} path='/' exact />\n            <Route component={WetherPage} path='/wether' />\n          </Switch>\n        </Wrapper>\n      </BrowserRouter>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabled\":\"styles_disabled__1ljcO\",\"text\":\"styles_text__wcnSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__Cu_at\"};"],"sourceRoot":""}