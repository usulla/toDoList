{"version":3,"sources":["ListsContext.js","components/MenuOfList/MenuOfList.js","components/TodoList/HeaderList/HeaderList.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/TodoItems/TodoItems.js","components/TodoList/TodoList.js","components/SideBar/SideBar.js","components/App.js","serviceWorker.js","index.js","components/TodoList/TodoItem/styles.module.scss","components/TodoList/styles.module.scss"],"names":["initialItems","id","Date","now","title","items","text","status","key","ListsContext","React","createContext","useStyles","makeStyles","theme","menu","zIndex","MenuOfList","deleteList","renameList","classes","idList","anchorRef","useRef","useState","open","setOpen","handleToggleMenu","prevOpen","IconButton","ref","onClick","Popper","className","anchorEl","current","placement","transition","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","onClose","autoFocusItem","MenuItem","Header","styled","div","HeaderList","saveTitleList","titleOfList","setTitle","titleInput","createRef","trim","length","Typography","variant","component","gutterBottom","TextField","style","marginBottom","label","inputRef","size","e","value","preventDefault","liStyle","display","justifyContent","alignItems","TodoItem","item","CheckButton","Consumer","context","color","completeItem","list","ListGroupItem","as","styles","disabled","deleteItem","TodoItems","ListItems","map","ListGroup","TodoList","lists","updateListsState","taskInput","Card","card","CardContent","filteredLists","filter","localStorage","setItem","JSON","stringify","newTitle","renamedLists","Form","onSubmit","newItem","updatedLists","concat","setTimeout","addItem","FormGroup","controlId","InputGroup","FormControl","placeholder","Append","Button","type","width","fullList","menuButton","margin","SideBar","addList","action","toggleDrawer","event","aria-label","edge","SwipeableDrawer","anchor","role","onKeyDown","List","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Title","h1","Wrapper","section","App","props","state","bind","newLists","this","setState","prevState","getFromStorage","initialLists","getItem","parse","fromStorage","newList","keyList","keyItem","filteredItems","Provider","Component","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.93fe57eb.chunk.js","sourcesContent":["import React from 'react';\n\nconst initialItems = [{\n  id: Date.now(),\n  title: 'Список дел',\n  items: [\n    {\n      text: 'Купить продукты',\n      status: false,\n      key: Date.now()\n    }]\n}];\n\nconst ListsContext = React.createContext(initialItems);\n\nexport default ListsContext;","import React from 'react';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    zIndex: 1,\n  },\n}));\n\nconst MenuOfList = ({ deleteList, renameList, idList }) => {\n  const classes = useStyles();\n  //NOTE: разобраться с хуком React.useRef\n  const anchorRef = React.useRef(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleToggleMenu = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <div>\n      <IconButton\n        ref={anchorRef}\n        onClick={handleToggleMenu}\n      >\n        <MoreHorizIcon />\n      </IconButton>\n      <Popper className={classes.menu} open={open} anchorEl={anchorRef.current} placement='bottom-end' transition>\n        {({ TransitionProps }) => (\n          <Grow {...TransitionProps}>\n            <Paper >\n              <ClickAwayListener onClickAway={handleToggleMenu}>\n                <MenuList onClose={handleToggleMenu} autoFocusItem={open}>\n                  <MenuItem onClick={() => { handleToggleMenu(); renameList('') }}>Rename list</MenuItem>\n                  <MenuItem onClick={() => { deleteList() }}>Delete list</MenuItem>\n                  <MenuItem onClick={handleToggleMenu}>Logout</MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  )\n}\n\nexport default MenuOfList;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport MenuOfList from '../../MenuOfList/MenuOfList';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst Header = styled.div`\n  display:flex;\n  justify-content:space-between;\n  align-items:center;\n  margin-bottom:10px;\n`;\nconst HeaderList = ({ title, deleteList, saveTitleList }) => {\n  const [titleOfList, setTitle] = React.useState(title);\n  const titleInput = React.createRef();\n\n  const renameList = (e) => {\n    setTitle(titleInput.current.value)\n    saveTitleList(titleInput.current.value)\n    e.preventDefault()\n  };\n\n  return (\n    <Header>\n      {titleOfList.trim().length !== 0 &&\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n          {titleOfList}\n        </Typography>\n      }\n      {titleOfList.trim().length === 0 &&\n        <>\n          <TextField style={{ marginBottom: '20px' }}\n            label=\"Title\"\n            inputRef={titleInput}\n            id=\"outlined-size-small\"\n            // defaultValue=\"Enter title of list\"\n            size=\"small\" />\n          <IconButton onClick={renameList}>\n            <CheckIcon />\n          </IconButton>\n        </>\n      }\n      <MenuOfList deleteList={deleteList} renameList={setTitle} />\n    </Header>\n  )\n}\n\nexport default HeaderList;","import React from \"react\";\nimport styles from './styles.module.scss';\nimport ListsContext from '../../../ListsContext';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Button from 'react-bootstrap/Button';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\nconst liStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n}\n\nconst TodoItem = ({ item }) => {\n\n  const CheckButton = () => {\n    return (\n      <ListsContext.Consumer>\n        {context => (\n          !item.status ?\n            <RadioButtonUncheckedIcon onClick={() => context.completeItem(context.list.id, item.key)} />\n            :\n            <CheckCircleOutlineIcon style={{ color: 'green' }} onClick={() => context.completeItem(context.list.id, item.key)} />\n        )}\n      </ListsContext.Consumer>\n    )\n  }\n  return (\n    <ListGroupItem as=\"li\" style={liStyle} className={item.status ? styles.disabled : null}>\n      <CheckButton />\n      <span className={styles.text}>{item.text}</span>\n      <ListsContext.Consumer>\n        {context => (\n          <DeleteForeverIcon onClick={() => context.deleteItem(context.list.id, item.key)} />\n        )\n        }\n      </ListsContext.Consumer>\n    </ListGroupItem>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport ListsContext from '../../../ListsContext';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\nconst TodoItems = () => {\n  const ListItems = () => {\n    return (\n      <ListsContext.Consumer>\n        {context => (\n          context.list.items.map(item => {\n            return (\n              <TodoItem item={item} key={item.key} />\n            )\n          })\n        )}\n      </ListsContext.Consumer>\n    )\n  }\n  // const listItems = todoEntries.map(this.createTasks);\n  return (\n    <ListGroup as=\"ul\" className=\"todo-list\">\n      <ListItems />\n    </ListGroup>\n  );\n}\n\nexport default TodoItems;","import React from \"react\";\nimport styles from './styles.module.scss';\nimport HeaderList from './HeaderList/HeaderList'\nimport TodoItems from './TodoItems/TodoItems';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nconst storageKey = \"TODO_ITEMS\";\nconst delayMs = 1000;\n\nconst TodoList = ({ lists, title, idList, updateListsState }) => {\n\n  const taskInput = React.createRef();\n\n  const saveTitleList = (newTitle) => {\n    const renamedLists = lists.map(list => {\n      return (\n        list.id === idList ? { ...list, title: newTitle } : list\n      )\n    })\n    /* Save to state */\n    updateListsState(renamedLists);\n    localStorage.setItem(storageKey, JSON.stringify(renamedLists));\n  };\n\n  const deleteList = () => {\n    const filteredLists = lists.filter(list => list.id !== idList);\n    /* Save to state */\n    updateListsState(filteredLists);\n    localStorage.setItem(storageKey, JSON.stringify(filteredLists));\n  }\n  const addItem = (taskInput, e) => {\n    e.preventDefault();\n    if (taskInput.current.value !== \"\") {\n      /* Create new entry */\n      var newItem = {\n        text: taskInput.current.value,\n        status: false,\n        key: Date.now()\n      }\n      const updatedLists = lists.map(list => {\n        return (\n          list.id === idList ? { ...list, items: list.items.concat(newItem) } : list\n        )\n      })\n      /* Save to state */\n      updateListsState(updatedLists)\n      /* Save to LocalStorage */\n      setTimeout(() => {\n        localStorage.setItem(storageKey, JSON.stringify(updatedLists));\n      }, delayMs);\n      /* Clear input for new task*/\n      taskInput.current.value = \"\";\n    }\n  }\n\n  return (\n    <Card className={styles.card}>\n      <CardContent>\n        <HeaderList title={title} deleteList={deleteList} saveTitleList={saveTitleList} />\n        {/* <Form onSubmit={addItem.bind(this, idList, taskInput)}> */}\n        <Form onSubmit={(e) => addItem(taskInput, e)}>\n          <FormGroup controlId=\"formAddItem\">\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                ref={taskInput}\n                placeholder=\"enter task\"\n              />\n              <InputGroup.Append>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Add\n                  </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </FormGroup>\n        </Form>\n        <TodoItems />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default TodoList;","import React from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    menuButton: {\n        margin:'20px'\n    },\n});\nconst SideBar = ({addList}) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const lists = [\n        {\n            id: Date.now(),\n            title: \"Add list\",\n            action: () => {\n                addList()\n            }\n        }\n    ]\n    const toggleDrawer = event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen((prevOpen) => !prevOpen);\n    };\n    return (\n        <>\n            <IconButton className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                edge=\"start\"\n            >\n                <MenuIcon />\n            </IconButton>\n            <SwipeableDrawer\n                anchor={\"left\"}\n                open={open}\n            // onClose={toggleDrawer(anchor, false)}\n            // onOpen={toggleDrawer(anchor, true)}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={toggleDrawer}\n                    onKeyDown={toggleDrawer}\n                >\n                    <List>\n                        {lists.map((list, index) => (\n                            <ListItem button key={list.id}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={list.title} onClick={list.action} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                </div>\n            </SwipeableDrawer>\n        </>\n    )\n}\n\nexport default SideBar;","import React, { Component } from 'react';\nimport ListsContext from '../ListsContext'\nimport styled from 'styled-components'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoList from './TodoList/TodoList';\nimport SideBar from './SideBar/SideBar';\nimport Button from 'react-bootstrap/Button';\n\n/* TODO: \n- 1. добавить сворачивание списка\n- 2. добавить удаление списка\n- 3. добавить переименование списка\n- 4. сделать теги\n- 5. добавить фон\n- 6. фон из flickr или живые обои\n- 7. добавить иконку\n*/\nconst Title = styled.h1`\n  color:#000000;\n  text-align:center;\n`;\nconst Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  flex-wrap:wrap;\n`;\nconst storageKey = \"TODO_ITEMS\";\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n    };\n    this.addList = this.addList.bind(this);\n    this.updateListsState = this.updateListsState.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.completeItem = this.completeItem.bind(this);\n  }\n\n  updateListsState(newLists) {\n    this.setState((prevState => {\n      return {\n        lists: newLists\n      }\n    }));\n  }\n\n  componentDidMount() {\n    const todoItems = this.getFromStorage();\n    /* Save to state */\n    const initialItems = [{\n      id: Date.now(),\n      title: 'Список дел',\n      items: [\n        {\n          text: 'Купить продукты',\n          status: false,\n          key: Date.now()\n        }]\n    }];\n    const initialLists = localStorage.getItem(storageKey) ? JSON.parse(localStorage.getItem(storageKey)) : initialItems\n\n    this.setState({\n      lists: initialLists\n    });\n  }\n\n  getFromStorage() {\n    const fromStorage = localStorage.getItem(storageKey);\n    return fromStorage ? JSON.parse(fromStorage) : [];\n  }\n\n  addList() {\n    var newList = {\n      id: Date.now(),\n      title: '',\n      items: []\n    }\n    this.setState(prevState => {\n      return {\n        lists: prevState.lists.concat(newList)\n      }\n    })\n  }\n\n  deleteItem(keyList, keyItem) {\n    const filteredItems = this.state.lists.map(list => {\n      return (\n        list.id === keyList ? { ...list, items: list.items.filter(item => item.key !== keyItem) } : list\n      )\n    })\n    /* Save to state */\n    this.setState({\n      lists: filteredItems\n    });\n    localStorage.setItem(storageKey, JSON.stringify(filteredItems));\n  }\n  completeItem(keyList, key) {\n    // NOTE: maybe const items =  getFromStorage();\n    const filteredItems = this.state.lists.map(list => {\n      return (\n        list.id === keyList ? {\n          ...list, items: list.items.map(item => {\n            return (\n              item.key === key ? { ...item, status: !item.status } : item\n            )\n          })\n        } : list\n      )\n    })\n\n    this.setState({\n      lists: filteredItems\n    });\n\n    localStorage.setItem(storageKey, JSON.stringify(filteredItems));\n  }\n  render() {\n    const lists = this.state.lists;\n    return (\n      <>\n        <SideBar addList={this.addList}/>\n        <Title>My happy list</Title>\n        <Wrapper>\n          {lists.map(list => {\n            return (\n              <ListsContext.Provider key={list.id} value={{\n                list: list,\n                deleteItem: this.deleteItem,\n                completeItem: this.completeItem\n              }}>\n                <TodoList idList={list.id} lists={this.state.lists} title={list.title} updateListsState={this.updateListsState}/>\n              </ListsContext.Provider>\n            )\n          })}\n        </Wrapper>\n      </>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabled\":\"styles_disabled__1ljcO\",\"text\":\"styles_text__wcnSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__Cu_at\"};"],"sourceRoot":""}