{"version":3,"sources":["store/types.js","store/listsReducer.js","store/rootReducer.js","store/configureStore.js","components/SideBar/SideBar.js","ListsContext.tsx","components/MenuOfList/MenuOfList.js","components/TodoList/HeaderList/HeaderList.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/TodoItems/TodoItems.js","components/TodoList/TodoList.tsx","pages/TodosPage.tsx","containers/TodosContainer.js","store/actions.js","pages/WishPage.tsx","components/App.tsx","serviceWorker.js","index.js","components/TodoList/TodoItem/styles.module.scss"],"names":["INIT","initialLists","lists","id","Date","now","title","todos","text","completed","stateFromLocalStorage","JSON","parse","localStorage","getItem","initialState","rootReducer","combineReducers","state","action","type","payload","concat","filter","list","map","idList","todo","idTodo","store","createStore","compose","applyMiddleware","thunk","logger","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","useStyles","makeStyles","width","fullList","menuButton","margin","SideBar","classes","React","useState","open","setOpen","toggleDrawer","event","key","prevOpen","IconButton","className","color","aria-label","onClick","edge","SwipeableDrawer","anchor","role","onKeyDown","Divider","List","ListItem","button","ListItemIcon","to","initialTodos","ListsContext","createContext","theme","menu","zIndex","MenuOfList","deleteList","renameList","anchorRef","useRef","handleToggleMenu","ref","Popper","anchorEl","current","placement","transition","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","onClose","autoFocusItem","MenuItem","Header","styled","div","HeaderList","saveTitleList","titleInput","createRef","trim","length","Typography","variant","component","gutterBottom","TextField","style","marginBottom","label","inputRef","size","e","value","preventDefault","liStyle","display","justifyContent","alignItems","TodoItem","item","CheckButton","Consumer","context","completeItem","ListGroupItem","as","styles","disabled","deleteItem","TodoItems","ListItems","ListGroup","TodoList","props","addTodo","taskInput","Card","maxWidth","CardContent","Form","onSubmit","newItem","addItem","FormGroup","controlId","InputGroup","RootRef","rootRef","FormControl","placeholder","Append","Button","Title","h1","TodosPage","createList","deleteTodo","completedTodo","textAlign","marginTop","newList","Provider","connect","dispatch","WishPage","Wrapper","section","App","TodosContainer","path","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.aab0ec08.chunk.js","sourcesContent":["// LocalStorage\nexport const STORAGE_KEY = 'TODO_ITEMS'\n// List\nexport const INIT = 'LIST/INIT'\nexport const CREATE_LIST = 'LIST/CREATE_LIST'\nexport const DELETE_LIST = 'LIST/DELETE_LIST'\nexport const RENAME_LIST = 'LIST/RENAME_LIST'\n// Todo\nexport const ADD_TODO = 'TODO/ADD_TODO'\nexport const DELETE_TODO = 'TODO/DELETE_TODO'\nexport const COMPLETED_TODO = 'TODO/COMPLETED_TODO'","import { CREATE_LIST, DELETE_LIST, RENAME_LIST, INIT, ADD_TODO, DELETE_TODO, COMPLETED_TODO } from './types'\n\nconst initialLists = {\n    lists: [{\n        id: Date.now(),\n        title: 'Дела на сегодня',\n        todos: [\n            {\n                id: Date.now(),\n                text: 'Купить продукты',\n                completed: false\n            }\n        ]\n    }]\n}\n\nconst stateFromLocalStorage = JSON.parse((localStorage.getItem('TODO_ITEMS')))\nconst initialState = stateFromLocalStorage ? { lists: stateFromLocalStorage } : initialLists\n\nexport const listsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INIT:\n            return { ...state, lists: action.payload }\n        case CREATE_LIST:\n            return {\n                ...state,\n                // ...state.concat([action.payload])\n                lists: state.lists.concat([action.payload])\n            }\n        case DELETE_LIST:\n            return {\n                ...state,\n                lists: state.lists.filter(list => list.id !== action.payload)\n            }\n        case RENAME_LIST:\n            return {\n                ...state,\n                lists: state.lists.map(list => {\n                    return (\n                        list.id === action.payload.idList ? {\n                            ...list, title: action.payload.title\n                        } : list\n                    )\n                })\n            }\n        case ADD_TODO:\n            return {\n                ...state,\n                lists: state.lists.map(list => {\n                    return (\n                        list.id === action.payload.idList ? {\n                            ...list,\n                            todos: list.todos.concat(action.payload.todo)\n                        } : list\n                    )\n                })\n            }\n        case DELETE_TODO:\n            return {\n                ...state,\n                lists: state.lists.map(list => {\n                    return (\n                        list.id === action.payload.idList ? {\n                            ...list,\n                            todos: list.todos.filter(todo => todo.id !== action.payload.idTodo)\n                        }\n                            : list\n                    )\n                })\n            }\n        case COMPLETED_TODO:\n            return {\n                ...state,\n                lists: state.lists.map(list => {\n                    return (\n                        list.id === action.payload.idList ? {\n                            ...list,\n                            todos: list.todos.map(todo => {\n                                return (\n                                    todo.id === action.payload.idTodo ? {\n                                        ...todo, completed: !todo.completed\n                                    }\n                                        : todo\n                                )\n                            })\n                        }\n                            : list\n                    )\n                })\n            }\n\n        default: return state\n    }\n}","import { combineReducers } from 'redux'\nimport { listsReducer } from './listsReducer'\n\nexport const rootReducer = combineReducers({\n    lists: listsReducer\n})","import { compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { rootReducer } from './rootReducer'\nimport { STORAGE_KEY } from './types'\n\nexport const store = createStore(rootReducer,\n    compose(applyMiddleware(thunk, logger), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n)\n/* Save to LocaStorage */\nstore.subscribe(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(store.getState().lists.lists))\n})","import React from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    menuButton: {\n        margin: '20px'\n    },\n});\nconst SideBar = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const toggleDrawer = event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen((prevOpen) => !prevOpen);\n    };\n    return (\n        <>\n            <IconButton className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                edge=\"start\"\n            >\n                <MenuIcon />\n            </IconButton>\n            <SwipeableDrawer\n                anchor={\"left\"}\n                open={open}\n            // onClose={toggleDrawer(anchor, false)}\n            // onOpen={toggleDrawer(anchor, true)}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={toggleDrawer}\n                    onKeyDown={toggleDrawer}\n                >\n                    {/* <List>\n                        {lists.map((list, index) => (\n                            <ListItem button key={list.id}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={list.title} onClick={list.action} />\n                            </ListItem>\n                        ))}\n                    </List> */}\n                    <Divider />\n                    <List>\n                        <ListItem button>\n                            <ListItemIcon><MailIcon /></ListItemIcon>\n                            <NavLink to=\"/\">Todo list</NavLink>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon><InboxIcon /></ListItemIcon>\n                            <NavLink to=\"/wishlist\">Wish list</NavLink>\n                        </ListItem>\n                    </List>\n                    <Divider />\n                </div>\n            </SwipeableDrawer>\n        </>\n    )\n}\n\nexport default SideBar;","import React from 'react';\nimport { ITodo } from './interfaces';\n\nconst initialTodos: any = [{\n  id: Date.now(),\n  title: 'Список дел',\n  todos: [\n    {\n      id: Date.now(),\n      text: 'Купить продукты',\n      completed: false\n    }]\n}];\n\nconst ListsContext = React.createContext(initialTodos);\n\nexport default ListsContext;","import React from 'react';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    zIndex: 1,\n  },\n}));\n\nconst MenuOfList = ({ deleteList, renameList, idList }) => {\n  const classes = useStyles();\n  //NOTE: разобраться с хуком React.useRef\n  const anchorRef = React.useRef(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleToggleMenu = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <div>\n      <IconButton\n        ref={anchorRef}\n        onClick={handleToggleMenu}\n      >\n        <MoreHorizIcon />\n      </IconButton>\n      <Popper className={classes.menu} open={open} anchorEl={anchorRef.current} placement='bottom-end' transition>\n        {({ TransitionProps }) => (\n          <Grow {...TransitionProps}>\n            <Paper >\n              <ClickAwayListener onClickAway={handleToggleMenu}>\n                <MenuList onClose={handleToggleMenu} autoFocusItem={open}>\n                  <MenuItem onClick={() => { handleToggleMenu(); renameList(idList, '') }}>Rename list</MenuItem>\n                  <MenuItem onClick={() => { deleteList() }}>Delete list</MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  )\n}\n\nexport default MenuOfList;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport MenuOfList from '../../MenuOfList/MenuOfList';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst Header = styled.div`\n  display:flex;\n  justify-content:space-between;\n  align-items:center;\n  margin-bottom:10px;\n`;\nconst HeaderList = ({ idList, title, deleteList, saveTitleList }) => {\n  const titleInput = React.createRef();\n\n  const renameList = (e) => {\n    saveTitleList(idList, titleInput.current.value)\n    e.preventDefault()\n  };\n\n  return (\n    <Header>\n      {title.trim().length !== 0 &&\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n          {title}\n        </Typography>\n      }\n      {title.trim().length === 0 &&\n        <>\n          <TextField style={{ marginBottom: '20px' }}\n            label=\"Title\"\n            inputRef={titleInput}\n            id=\"outlined-size-small\"\n            // defaultValue=\"Enter title of list\"\n            size=\"small\" />\n          <IconButton onClick={renameList}>\n            <CheckIcon />\n          </IconButton>\n        </>\n      }\n      <MenuOfList deleteList={deleteList} renameList={saveTitleList} idList={idList} />\n    </Header>\n  )\n}\n\nexport default HeaderList;","import React from \"react\";\nimport styles from './styles.module.scss';\nimport ListsContext from '../../../ListsContext';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Button from 'react-bootstrap/Button';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\n\nconst liStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n}\n\nconst TodoItem = ({ item }) => {\n\n  const CheckButton = () => {\n    return (\n      <ListsContext.Consumer>\n        {context => (\n          !item.completed ?\n            <RadioButtonUncheckedIcon onClick={() => context.completeItem(context.list.id, item.id)} />\n            :\n            <CheckCircleOutlineIcon style={{ color: 'green' }} onClick={() => context.completeItem(context.list.id, item.id)} />\n        )}\n      </ListsContext.Consumer>\n    )\n  }\n  return (\n    <ListGroupItem as=\"li\" style={liStyle} className={item.completed ? styles.disabled : null}>\n      <CheckButton />\n      <span className={styles.text}>{item.text}</span>\n      <ListsContext.Consumer>\n        {context => (\n          <DeleteForeverIcon onClick={() => context.deleteItem(context.list.id, item.id)} />\n        )\n        }\n      </ListsContext.Consumer>\n    </ListGroupItem>\n  );\n}\n\n\nexport default TodoItem\n","import React from \"react\";\nimport ListsContext from '../../../ListsContext';\nimport TodoItem from '../TodoItem/TodoItem';\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\nexport const TodoItems = () => {\n  const ListItems = () => {\n    return (\n      <ListsContext.Consumer>\n        {context => (\n          context.list.todos.map(item => {\n            return (\n              <TodoItem item={item} key={item.id} />\n            )\n          })\n        )}\n      </ListsContext.Consumer>\n    )\n  }\n  // const listItems = todoEntries.map(this.createTasks);\n  return (\n    <ListGroup as=\"ul\" className=\"todo-list\">\n      <ListItems />\n    </ListGroup>\n  );\n}","import React, { useRef } from \"react\";\nimport RootRef from '@material-ui/core/RootRef';\n// import styles from './styles.module.scss';\nimport HeaderList from './HeaderList/HeaderList'\nimport { TodoItems } from './TodoItems/TodoItems.js';\nimport Form from 'react-bootstrap/Form';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { ITodo, T } from '../../interfaces';\n\ntype TodoListProps = {\n  title: string\n  idList: string | number\n  addTodo: (idList: number | string, todo: ITodo) => void\n  deleteList: (idList: number | string) => void\n  renameList: (idList: number | string, title: string) => void\n}\n\nconst TodoList: React.FC<TodoListProps> = (props) => {\n  const { title, idList, addTodo, deleteList, renameList } = props\n  const taskInput = useRef<HTMLInputElement>(null);\n\n  const addItem = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    if (taskInput.current!.value !== \"\") {\n      /* Create new entry */\n      const newItem: any = {\n        id: Date.now(),\n        text: taskInput.current!.value,\n        completed: false\n      }\n      addTodo(idList, newItem)\n      /* Clear input for new task*/\n      taskInput.current!.value = \"\";\n    }\n  }\n  return (\n    <Card style={{ margin: '35px 40px', maxWidth: '320px', width: '320px' }}>\n      <CardContent>\n        <HeaderList idList={idList} title={title}\n          deleteList={() => deleteList(idList)}\n          saveTitleList={(idList, title) => renameList(idList, title)} />\n        {/* <Form onSubmit={addItem.bind(this, idList, taskInput)}> */}\n        <Form onSubmit={(event: any): void => addItem(event)}>\n          <FormGroup controlId=\"formAddItem\">\n            <InputGroup className=\"mb-3\">\n              <>\n                <RootRef rootRef={taskInput}>\n                  <FormControl\n                    placeholder=\"enter task\"\n                  />\n                </RootRef>\n                <InputGroup.Append>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </>\n            </InputGroup>\n          </FormGroup>\n        </Form>\n        <TodoItems />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default TodoList;","import React from 'react';\nimport { ITodo } from '../interfaces';\nimport ListsContext from '../ListsContext'\nimport TodoList from '../components/TodoList/TodoList';\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button';\n\nconst Title = styled.h1`\n  color:#000000;\n  text-align:center;\n  width:100%;\n  font-size:2rem;\n`;\n\nconst TodosPage: React.FC<any> = (props) => {\n    const { lists, createList, deleteTodo, completedTodo, addTodo, deleteList, renameList } = props\n    const addList = (): void => {\n        const newList: ITodo = {\n            id: Date.now(),\n            title: '',\n            todos: []\n        }\n        createList(newList)\n    }\n\n    return (\n        <>\n            <Title>HAPPY TODOS</Title>\n            <div style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={addList}>\n                    Add list\n                </Button>\n            </div>\n            {(lists.length === 0) &&\n                <p className=\"center\">While there is no business</p>\n            }\n            {lists.map(list => {\n                return (\n                    <ListsContext.Provider\n                        key={list.id}\n                        value={{\n                            list: list,\n                            deleteItem: deleteTodo,\n                            completeItem: completedTodo\n                        }}>\n                        <TodoList idList={list.id}\n                            title={list.title}\n                            addTodo={addTodo}\n                            deleteList={deleteList}\n                            renameList={renameList} />\n                    </ListsContext.Provider>\n                )\n            })}\n        </>\n    )\n}\n\nexport default TodosPage;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { createList, deleteList, deleteTodo, renameList, completedTodo, addTodo } from '../store/actions'\nimport TodosPage from '../pages/TodosPage.tsx'\n\nconst TodosContainer = (props) => {\n    const { lists, createList, deleteTodo, completedTodo, addTodo, deleteList, renameList } = props\n    return (\n        <TodosPage\n            lists={lists}\n            createList={createList}\n            deleteTodo={deleteTodo}\n            completedTodo={completedTodo}\n            addTodo={addTodo}\n            deleteList={deleteList}\n            renameList={renameList}\n        />\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        lists: store.lists.lists\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createList: (newList) => dispatch(createList(newList)),\n        deleteTodo: (idList, idTodo) => dispatch(deleteTodo(idList, idTodo)),\n        completedTodo: (idList, idTodo) => dispatch(completedTodo(idList, idTodo)),\n        addTodo: (idList, todo) => dispatch(addTodo(idList, todo)),\n        deleteList: (idList) => dispatch(deleteList(idList)),\n        renameList: (idList, title) => dispatch(renameList(idList, title))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer)","import { CREATE_LIST, DELETE_LIST, RENAME_LIST, INIT, ADD_TODO, DELETE_TODO, COMPLETED_TODO } from './types.js'\n// List\nexport const createList = (initialList) => {\n    return {\n        type: CREATE_LIST,\n        payload: initialList\n    }\n}\n\nexport const deleteList = (id) => {\n    return {\n        type: DELETE_LIST,\n        payload: id\n    }\n}\nexport const renameList = (idList, title) => {\n    return {\n        type: RENAME_LIST,\n        payload: { idList, title }\n    }\n}\nexport const initLoad = (lists) => {\n    return {\n        type: INIT,\n        payload: lists\n    }\n}\n// Todo\nexport const addTodo = (idList, todo) => {\n    return {\n        type: ADD_TODO,\n        payload: { idList, todo }\n    }\n}\nexport const deleteTodo = (idList, idTodo) => {\n    return {\n        type: DELETE_TODO,\n        payload: { idList, idTodo }\n    }\n}\nexport const completedTodo = (idList, idTodo) => {\n    return {\n        type: COMPLETED_TODO,\n        payload: { idList, idTodo }\n    }\n}\n\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  color:#000000;\n  text-align:center;\n  width:100%;\n  font-size:2rem;\n  text-transform:uppercase;\n`;\nexport const WishPage: React.FC = () => {\n  return (\n    <>\n      <Title>Wish Page</Title>\n      <h3>will here in future</h3>\n    </>\n  )\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport styled from 'styled-components'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SideBar from './SideBar/SideBar';\nimport TodosContainer from '../containers/TodosContainer';\nimport { WishPage } from '../pages/WishPage';\n/* TODO: \n- 1. добавить сворачивание списка\n+ 2. добавить удаление списка\n+ 3. добавить переименование списка\n- 4. сделать теги\n+ 5. добавить фон\n- 6. фон из flickr или живые обои\n- 7. добавить иконку\n*/\nconst Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  flex-wrap:wrap;\n`;\n\nexport const App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <SideBar />\n        <Wrapper>\n          <Switch>\n            <Route component={TodosContainer} path='/' exact />\n            <Route component={WishPage} path='/wishlist' />\n          </Switch>\n        </Wrapper>\n      </BrowserRouter>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store/configureStore'\nimport { App } from './components/App'\nimport './assets/index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabled\":\"styles_disabled__1ljcO\",\"text\":\"styles_text__wcnSq\"};"],"sourceRoot":""}